/*!
 * PSPDFKit for Node.js 0.0.4 (https://pspdfkit.com/nodejs)
 *
 * Copyright (c) 2023 PSPDFKit GmbH. All rights reserved.
 *
 * THIS SOURCE CODE AND ANY ACCOMPANYING DOCUMENTATION ARE PROTECTED BY INTERNATIONAL COPYRIGHT LAW
 * AND MAY NOT BE RESOLD OR REDISTRIBUTED. USAGE IS BOUND TO THE PSPDFKIT LICENSE AGREEMENT.
 * UNAUTHORIZED REPRODUCTION OR DISTRIBUTION IS SUBJECT TO CIVIL AND CRIMINAL PENALTIES.
 * This notice may not be removed from this file.
 *
 * PSPDFKit uses several open source third-party components: https://pspdfkit.com/acknowledgements/nodejs/
 */var t,e,r={BUNDLE:"/vendor",GDPICTURE_HASH:"6fae66c3c9c1385ea5c355798c5e113529b1d7b9"},a=function t(e){let r;return Object.setPrototypeOf(r=e instanceof Error?e:Error(e),t.prototype),r};function n(t,e){if(!t)throw new a(`Assertion failed: ${e||"Condition not met"}

For further assistance, please go to: https://pspdfkit.com/support/request`)}a.prototype=Object.create(Error.prototype,{name:{value:"PSPDFKitError",enumerable:!1}});var o={};async function i(t){try{let e=await fetch(t).catch(e=>{throw new a(`Error fetching dynamic fonts file ${t}. ${e}`)});if(200!==e.status)throw new a(`Error fetching dynamic fonts file ${t}. Status code: ${e.status}`);return await e.json().catch(e=>{throw new a(`Error parsing dynamic fonts file ${t}. ${e}`)})}catch(t){throw t}}async function s(t,e){let a;if("string"!=typeof t)return{initDotnet:a}=await import(t.wasmLoaderPath),a(t.baseUrl);{let a=`${r.BUNDLE}/`,n=`${a}gdpicture-${r.GDPICTURE_HASH}/jit`,o=`${n}/initDotnet.js`,i=`${a}gdpicture-${r.GDPICTURE_HASH}/aot`,s=`${i}/initDotnet.js`,f,l;e?(f=`${t}${s}`,l=`${t}${i}`):(f=`${t}${o}`,l=`${t}${n}`);let{initDotnet:c}=await import(f);return c(l)}}var f=((t=f||{})[t.pdf_a_1a=0]="pdf_a_1a",t[t.pdf_a_1b=1]="pdf_a_1b",t[t.pdf_a_2a=2]="pdf_a_2a",t[t.pdf_a_2u=3]="pdf_a_2u",t[t.pdf_a_2b=4]="pdf_a_2b",t[t.pdf_a_3a=5]="pdf_a_3a",t[t.pdf_a_3u=6]="pdf_a_3u",t[t.pdf_a_3b=7]="pdf_a_3b",t[t.pdf_a_4=8]="pdf_a_4",t[t.pdf_a_4e=9]="pdf_a_4e",t[t.pdf_a_4f=10]="pdf_a_4f",t),l="/create.pdf",c="/save.pdf",d="/create.docx",p="/save.docx",u="/templateData.json",_=("u">typeof WorkerGlobalScope&&(self,WorkerGlobalScope),null),y=null;function g(t,...e){let r;for(let t of(n(y,"GdPicture WebAssembly is not loaded."),e))r=Object.assign(e[0],t);let a=JSON.stringify({type:t,...r}),o=JSON.parse(y.CommandHandler(a));if(!o.success)throw Error(o.errorReason+": "+o.errorMessage+`
`+o.error);return o}var m=new class{_mountCustomFonts(t,e){n(_,"WebAssembly module not loaded."),_.FS.mkdir(e),t.forEach(t=>{_.FS.writeFile(`${e}/${t.name}`,new Uint8Array(t.data))})}async loadModule(t,e,r,a,n,o,f){let{Assemblies:l,Module:c}=await s(t,e);y=l.GdPictureWasm.API,_=c,g("gdpicture/setLicense",{origin:r},{licenseKey:a||"DEMO_PSPDFKIT_WEB"});let d=n?"/fonts":"";if(n&&!_.FS.analyzePath(d).exists&&(this._mountCustomFonts(n,d),g("gdpicture/setFonts",{fontPaths:[d]})),o){let t=await i(o);g("gdpicture/setDynamicFontLoading",{baseUrl:o.split("/").slice(0,-1).join("/"),allowedFonts:t.availableFonts,v:1})}f&&g("gdpicture/setFontSubstitutions",{fontSubstitutions:f})}toPdf(t,e){_.FS.writeFile(l,new Uint8Array(t));let r={file:c,format:"pdf"};e&&e in f&&(r.conformance=e);try{return g("gdpicture/process",{input:{file:l},output:r}),_.FS.readFile(c).buffer}finally{try{_.FS.unlink(c)}catch{}}}async populateDocumentTemplate(t,e){let r;_.FS.writeFile(d,new Uint8Array(t));try{r=JSON.stringify(e,null,2)}catch{throw Error("Invalid config data")}_.FS.writeFile(u,r);try{return g("gdpicture/process-office-template",{inputFile:d,modelAndConfigFile:u,outputFile:p}),_.FS.readFile(p).buffer}finally{try{_.FS.unlink(p),_.FS.unlink(u)}catch{}}}};self.onmessage=async({data:t})=>{let a,n;try{let e=await m[t.action](...t.args);if(a={id:t.id,result:e},Array.isArray(e)){let t=e.filter(t=>t instanceof ArrayBuffer);t.length>0&&(n=t)}e instanceof ArrayBuffer&&(n=[e])}catch(f){var i;let s=[...t.args].filter(t=>t instanceof ArrayBuffer);s.length>0&&(n=s),i="[PSPDFKit Internal Debug]",f.message,f.stack,r.STANDALONE_NATIVE?(e||(r.STANDALONE_NATIVE&&(console.log("Creating UWP Bridge"),e=new o),e)).error(JSON.stringify(i)):console.error(i),a={id:t.id,error:f.message||f.toString(),callArgs:t.args}}self.postMessage(a,n)};